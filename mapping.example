# Rename this file to mapping.yaml

##################################################
# MQTT subscriptions:
##################################################
subscriptions:
  - zigbee2mqtt/#
  - sig/+/pir
  - sens/thermostaat/+/temperature
  - sens/thermostaat/+/humidity
  - sens/thermostaat/+/SENSOR
  - sens/pooltemp/+
  - stat/zwembad/cover
  - stat/thermostaat/+/target
  - stat/thermostaat/badkamer/RESULT
  - stat/pooltemp/batt_v

  ##################################################
  # Rules for processing incoming mqtt message
  ##################################################
  # format:
  # - topic: regular expression for matching the incoming topic
  #   measurement: influx measurement
  #   fields: (mandatory)
  #     value: 
  #     other field:
  #   tags: (optional)
  #     my_tag:
  #
  # both fields and tags are described with python expressions
  #
rules:
  - topic: zigbee2mqtt/Door_[0-9]*
    measurement: test_pir
    fields:
      value: 0 if json(payload)['contact'] else 1
    tags:
      room: topic[1]
  - topic: zigbee2mqtt/PIR\-[0-9]*
    measurement: test_pir
    fields:
      value: 1 if json(payload)['occupancy'] else 0
    tags:
      room: topic[1]

  - topic: sens/thermostaat/.*/temperature
    measurement: test_temp
    fields:
      value: float(payload)
    tags:
      room: topic[2]
  - topic: sens/thermostaat/.*/humidity
    measurement: test_humidity
    fields:
      value: float(payload)
    tags:
      room: topic[2]
  - topic: stat/thermostaat/.*/mode
    measurement: test_mode
    fields:
      value: payload
    tags:
      room: topic[2]
  - topic: stat/thermostaat/.*/target
    measurement: test_tempTarget
    fields:
      value: float(payload)
    tags:
      room: topic[2]
  - topic: sig/.*/pir
    measurement: test_pir
    fields:
      value: 1
    tags:
      room: topic[1]
  - topic: zigbee2mqtt/(?:PIR\-\d|Door_\d)
    measurement: test_voltage
    fields:
      value: json(payload)['voltage']
    tags:
      sensor: topic[1]
  - topic: stat/pooltemp/batt_v
    measurement: test_voltage
    fields:
      value: int(float(payload)*1000)
    tags:
      sensor: '"zwembadtemp"'
  - topic: sens/pooltemp/(?:air|water)
    measurement: test_temp
    fields:
      value: float(payload)
    tags:
      room: "'zwembad_'+topic[2]"
  - topic: stat/zwembad/cover
    measurement: test_poolcover
    fields:
      value: payload
  - topic: sens/thermostaat/.*/SENSOR
    measurement: test_temp
    fields:
      value: float(json(payload)['AM2301']['Temperature'])
    tags:
      room: topic[2]
  - topic: sens/thermostaat/.*/SENSOR
    measurement: test_humidity
    fields:
      value: float(json(payload)['AM2301']['Humidity'])
    tags:
      room: topic[2]
  - topic: stat/thermostaat/badkamer/RESULT
    measurement: test_badkamer_droger
    fields:
      value: 1 if json(payload)['POWER'] == "ON" else 0
    